package cds.api;

import cds.model.RequestAccountIds;
import cds.model.ResponseBankingAccountById;
import cds.model.ResponseBankingAccountList;
import cds.model.ResponseBankingAccountsBalanceById;
import cds.model.ResponseBankingAccountsBalanceList;
import cds.model.ResponseBankingDirectDebitAuthorisationList;
import cds.model.ResponseBankingPayeeById;
import cds.model.ResponseBankingPayeeList;
import cds.model.ResponseBankingProductById;
import cds.model.ResponseBankingProductList;
import cds.model.ResponseBankingScheduledPaymentsList;
import cds.model.ResponseBankingTransactionById;
import cds.model.ResponseBankingTransactionList;
import cds.model.ResponseErrorList;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.constraints.*;
import javax.validation.Valid;
import javax.servlet.http.HttpServletRequest;
import java.io.IOException;
import java.util.List;
import cds.services.ListAccountsI;
import cds.model.ListAccountsP;
import cds.model.ListAccountsResponseWrapper;
import org.springframework.beans.factory.annotation.Autowired;
import cds.services.ListBalancesBulkI;
import cds.model.ListBalancesBulkP;
import cds.model.ListBalancesBulkResponseWrapper;
import cds.services.ListBalancesSpecificAccountsI;
import cds.model.ListBalancesSpecificAccountsP;
import cds.model.ListBalancesSpecificAccountsResponseWrapper;
import cds.services.ListBalanceI;
import cds.model.ListBalanceP;
import cds.model.ListBalanceResponseWrapper;
import cds.services.GetAccountDetailI;
import cds.model.GetAccountDetailP;
import cds.model.GetAccountDetailResponseWrapper;
import cds.services.GetTransactionsI;
import cds.model.GetTransactionsP;
import cds.model.GetTransactionsResponseWrapper;
import cds.services.GetTransactionDetailI;
import cds.model.GetTransactionDetailP;
import cds.model.GetTransactionDetailResponseWrapper;
import cds.services.ListDirectDebitsI;
import cds.model.ListDirectDebitsP;
import cds.model.ListDirectDebitsResponseWrapper;
import cds.services.ListDirectDebitsBulkI;
import cds.model.ListDirectDebitsBulkP;
import cds.model.ListDirectDebitsBulkResponseWrapper;
import cds.services.ListDirectDebitsSpecificAccountsI;
import cds.model.ListDirectDebitsSpecificAccountsP;
import cds.model.ListDirectDebitsSpecificAccountsResponseWrapper;
import cds.services.ListScheduledPaymentsI;
import cds.model.ListScheduledPaymentsP;
import cds.model.ListScheduledPaymentsResponseWrapper;
import cds.services.ListScheduledPaymentsBulkI;
import cds.model.ListScheduledPaymentsBulkP;
import cds.model.ListScheduledPaymentsBulkResponseWrapper;
import cds.services.ListScheduledPaymentsSpecificAccountsI;
import cds.model.ListScheduledPaymentsSpecificAccountsP;
import cds.model.ListScheduledPaymentsSpecificAccountsResponseWrapper;
import cds.services.ListPayeesI;
import cds.model.ListPayeesP;
import cds.model.ListPayeesResponseWrapper;
import cds.services.GetPayeeDetailI;
import cds.model.GetPayeeDetailP;
import cds.model.GetPayeeDetailResponseWrapper;
import cds.services.ListProductsI;
import cds.model.ListProductsP;
import cds.model.ListProductsResponseWrapper;
import cds.services.GetProductDetailI;
import cds.model.GetProductDetailP;
import cds.model.GetProductDetailResponseWrapper;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-10-07T02:03:35.302Z")

@Controller
public class BankingApiController implements BankingApi {

	@Autowired
	GetProductDetailI getProductDetailI;


	@Autowired
	ListProductsI listProductsI;


	@Autowired
	GetPayeeDetailI getPayeeDetailI;


	@Autowired
	ListPayeesI listPayeesI;


	@Autowired
	ListScheduledPaymentsSpecificAccountsI listScheduledPaymentsSpecificAccountsI;


	@Autowired
	ListScheduledPaymentsBulkI listScheduledPaymentsBulkI;


	@Autowired
	ListScheduledPaymentsI listScheduledPaymentsI;


	@Autowired
	ListDirectDebitsSpecificAccountsI listDirectDebitsSpecificAccountsI;


	@Autowired
	ListDirectDebitsBulkI listDirectDebitsBulkI;


	@Autowired
	ListDirectDebitsI listDirectDebitsI;


	@Autowired
	GetTransactionDetailI getTransactionDetailI;


	@Autowired
	GetTransactionsI getTransactionsI;


	@Autowired
	GetAccountDetailI getAccountDetailI;


	@Autowired
	ListBalanceI listBalanceI;


	@Autowired
	ListBalancesSpecificAccountsI listBalancesSpecificAccountsI;


	@Autowired
	ListBalancesBulkI listBalancesBulkI;


	@Autowired
	ListAccountsI listAccountsI;


    private static final Logger log = LoggerFactory.getLogger(BankingApiController.class);

    private final ObjectMapper objectMapper;

    private final HttpServletRequest request;

    @org.springframework.beans.factory.annotation.Autowired
    public BankingApiController(ObjectMapper objectMapper, HttpServletRequest request) {
        this.objectMapper = objectMapper;
        this.request = request;
    }

    public ResponseEntity<ResponseBankingAccountById> getAccountDetail(@ApiParam(value = "A tokenised identifier for the account which is unique but not shareable",required=true) @PathVariable("accountId") String accountId,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        GetAccountDetailResponseWrapper res  = getAccountDetailI.execute(new GetAccountDetailP(accountId, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingPayeeById> getPayeeDetail(@ApiParam(value = "The ID used to locate the details of a particular payee",required=true) @PathVariable("payeeId") String payeeId,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        GetPayeeDetailResponseWrapper res  = getPayeeDetailI.execute(new GetPayeeDetailP(payeeId, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingProductById> getProductDetail(@ApiParam(value = "ID of the specific product requested",required=true) @PathVariable("productId") String productId,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV) {
        
        GetProductDetailResponseWrapper res  = getProductDetailI.execute(new GetProductDetailP(productId, xV, xMinV));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingTransactionById> getTransactionDetail(@ApiParam(value = "ID of the account to get transactions for.  Must have previously been returned by one of the account list end points",required=true) @PathVariable("accountId") String accountId,@ApiParam(value = "ID of the transaction obtained from a previous call to one of the other transaction end points",required=true) @PathVariable("transactionId") String transactionId,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        GetTransactionDetailResponseWrapper res  = getTransactionDetailI.execute(new GetTransactionDetailP(accountId, transactionId, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingTransactionList> getTransactions(@ApiParam(value = "ID of the account to get transactions for.  Must have previously been returned by one of the account list end points.",required=true) @PathVariable("accountId") String accountId,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Constrain the transaction history request to transactions with effective time at or after this date/time. If absent defaults to newest-time minus 90 days.  Format is aligned to DateTimeString common type") @Valid @RequestParam(value = "oldest-time", required = false) String oldestTime,@ApiParam(value = "Constrain the transaction history request to transactions with effective time at or before this date/time.  If absent defaults to today.  Format is aligned to DateTimeString common type") @Valid @RequestParam(value = "newest-time", required = false) String newestTime,@ApiParam(value = "Filter transactions to only transactions with amounts higher or equal to than this amount") @Valid @RequestParam(value = "min-amount", required = false) String minAmount,@ApiParam(value = "Filter transactions to only transactions with amounts less than or equal to than this amount") @Valid @RequestParam(value = "max-amount", required = false) String maxAmount,@ApiParam(value = "Filter transactions to only transactions where this string value is found as a substring of either the reference or description fields. Format is arbitrary ASCII string. This parameter is optionally implemented by data holders. If it is not implemented then a response should be provided as normal without text filtering applied and an additional boolean field named isQueryParamUnsupported should be included in the meta object and set to true (whether the text parameter is supplied or not)") @Valid @RequestParam(value = "text", required = false) String text,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        GetTransactionsResponseWrapper res  = getTransactionsI.execute(new GetTransactionsP(accountId, oldestTime, newestTime, minAmount, maxAmount, text, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingAccountList> listAccounts(@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.", allowableValues = "TRANS_AND_SAVINGS_ACCOUNTS, TERM_DEPOSITS, TRAVEL_CARDS, REGULATED_TRUST_ACCOUNTS, RESIDENTIAL_MORTGAGES, CRED_AND_CHRG_CARDS, PERS_LOANS, MARGIN_LOANS, LEASES, TRADE_FINANCE, OVERDRAFTS, BUSINESS_LOANS") @Valid @RequestParam(value = "product-category", required = false) String productCategory,@ApiParam(value = "Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed", allowableValues = "OPEN, CLOSED, ALL", defaultValue = "ALL") @Valid @RequestParam(value = "open-status", required = false, defaultValue="ALL") String openStatus,@ApiParam(value = "Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts") @Valid @RequestParam(value = "is-owned", required = false) Boolean isOwned,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        ListAccountsResponseWrapper res  = listAccountsI.execute(new ListAccountsP(productCategory, openStatus, isOwned, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingAccountsBalanceById> listBalance(@ApiParam(value = "ID of the specific account requested",required=true) @PathVariable("accountId") String accountId,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        String accept = request.getHeader("Accept");
        if (accept != null && accept.contains("application/json")) {
            try {
                return new ResponseEntity<ResponseBankingAccountsBalanceById>(objectMapper.readValue("{  \"data\" : {    \"accountId\" : \"accountId\",    \"purses\" : [ {      \"amount\" : \"amount\",      \"currency\" : \"currency\"    }, {      \"amount\" : \"amount\",      \"currency\" : \"currency\"    } ],    \"amortisedLimit\" : \"amortisedLimit\",    \"currentBalance\" : \"currentBalance\",    \"creditLimit\" : \"creditLimit\",    \"currency\" : \"currency\",    \"availableBalance\" : \"availableBalance\"  },  \"meta\" : { },  \"links\" : {    \"self\" : \"self\"  }}", ResponseBankingAccountsBalanceById.class), HttpStatus.NOT_IMPLEMENTED);
            } catch (IOException e) {
                log.error("Couldn't serialize response for content type application/json", e);
                return new ResponseEntity<ResponseBankingAccountsBalanceById>(HttpStatus.INTERNAL_SERVER_ERROR);
            }
        }

        return new ResponseEntity<ResponseBankingAccountsBalanceById>(HttpStatus.NOT_IMPLEMENTED);
    }

    public ResponseEntity<ResponseBankingAccountsBalanceList> listBalancesBulk(@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.", allowableValues = "TRANS_AND_SAVINGS_ACCOUNTS, TERM_DEPOSITS, TRAVEL_CARDS, REGULATED_TRUST_ACCOUNTS, RESIDENTIAL_MORTGAGES, CRED_AND_CHRG_CARDS, PERS_LOANS, MARGIN_LOANS, LEASES, TRADE_FINANCE, OVERDRAFTS, BUSINESS_LOANS") @Valid @RequestParam(value = "product-category", required = false) String productCategory,@ApiParam(value = "Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed", allowableValues = "OPEN, CLOSED, ALL", defaultValue = "ALL") @Valid @RequestParam(value = "open-status", required = false, defaultValue="ALL") String openStatus,@ApiParam(value = "Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts") @Valid @RequestParam(value = "is-owned", required = false) Boolean isOwned,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        ListBalancesBulkResponseWrapper res  = listBalancesBulkI.execute(new ListBalancesBulkP(productCategory, openStatus, isOwned, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingAccountsBalanceList> listBalancesSpecificAccounts(@ApiParam(value = "The list of account IDs to obtain balances for" ,required=true )  @Valid @RequestBody RequestAccountIds accountIds,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        ListBalancesSpecificAccountsResponseWrapper res  = listBalancesSpecificAccountsI.execute(new ListBalancesSpecificAccountsP(accountIds, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingDirectDebitAuthorisationList> listDirectDebits(@ApiParam(value = "ID of the account to get direct debit authorisations for.  Must have previously been returned by one of the account list end points.",required=true) @PathVariable("accountId") String accountId,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        String accept = request.getHeader("Accept");
        if (accept != null && accept.contains("application/json")) {
            try {
                return new ResponseEntity<ResponseBankingDirectDebitAuthorisationList>(objectMapper.readValue("{  \"data\" : {    \"directDebitAuthorisations\" : [ {      \"lastDebitAmount\" : \"lastDebitAmount\",      \"accountId\" : \"accountId\",      \"lastDebitDateTime\" : \"lastDebitDateTime\",      \"authorisedEntity\" : {        \"arbn\" : \"arbn\",        \"description\" : \"description\",        \"financialInstitution\" : \"financialInstitution\",        \"abn\" : \"abn\",        \"acn\" : \"acn\"      }    }, {      \"lastDebitAmount\" : \"lastDebitAmount\",      \"accountId\" : \"accountId\",      \"lastDebitDateTime\" : \"lastDebitDateTime\",      \"authorisedEntity\" : {        \"arbn\" : \"arbn\",        \"description\" : \"description\",        \"financialInstitution\" : \"financialInstitution\",        \"abn\" : \"abn\",        \"acn\" : \"acn\"      }    } ]  },  \"meta\" : {    \"totalRecords\" : 0,    \"totalPages\" : 6  },  \"links\" : {    \"next\" : \"next\",    \"last\" : \"last\",    \"prev\" : \"prev\",    \"self\" : \"self\",    \"first\" : \"first\"  }}", ResponseBankingDirectDebitAuthorisationList.class), HttpStatus.NOT_IMPLEMENTED);
            } catch (IOException e) {
                log.error("Couldn't serialize response for content type application/json", e);
                return new ResponseEntity<ResponseBankingDirectDebitAuthorisationList>(HttpStatus.INTERNAL_SERVER_ERROR);
            }
        }

        return new ResponseEntity<ResponseBankingDirectDebitAuthorisationList>(HttpStatus.NOT_IMPLEMENTED);
    }

    public ResponseEntity<ResponseBankingDirectDebitAuthorisationList> listDirectDebitsBulk(@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.", allowableValues = "TRANS_AND_SAVINGS_ACCOUNTS, TERM_DEPOSITS, TRAVEL_CARDS, REGULATED_TRUST_ACCOUNTS, RESIDENTIAL_MORTGAGES, CRED_AND_CHRG_CARDS, PERS_LOANS, MARGIN_LOANS, LEASES, TRADE_FINANCE, OVERDRAFTS, BUSINESS_LOANS") @Valid @RequestParam(value = "product-category", required = false) String productCategory,@ApiParam(value = "Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed", allowableValues = "OPEN, CLOSED, ALL", defaultValue = "ALL") @Valid @RequestParam(value = "open-status", required = false, defaultValue="ALL") String openStatus,@ApiParam(value = "Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts") @Valid @RequestParam(value = "is-owned", required = false) Boolean isOwned,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        ListDirectDebitsBulkResponseWrapper res  = listDirectDebitsBulkI.execute(new ListDirectDebitsBulkP(productCategory, openStatus, isOwned, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingDirectDebitAuthorisationList> listDirectDebitsSpecificAccounts(@ApiParam(value = "Array of specific accountIds to obtain authorisations for" ,required=true )  @Valid @RequestBody RequestAccountIds accountIds,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        ListDirectDebitsSpecificAccountsResponseWrapper res  = listDirectDebitsSpecificAccountsI.execute(new ListDirectDebitsSpecificAccountsP(accountIds, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingPayeeList> listPayees(@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Filter on the payee type field.  In addition to normal type field values, ALL can be specified to retrieve all payees.  If absent the assumed value is ALL", allowableValues = "DOMESTIC, INTERNATIONAL, BILLER, ALL", defaultValue = "ALL") @Valid @RequestParam(value = "type", required = false, defaultValue="ALL") String type,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        ListPayeesResponseWrapper res  = listPayeesI.execute(new ListPayeesP(type, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingProductList> listProducts(@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to 'CURRENT'", allowableValues = "CURRENT, FUTURE, ALL", defaultValue = "CURRENT") @Valid @RequestParam(value = "effective", required = false, defaultValue="CURRENT") String effective,@ApiParam(value = "Only include products that have been updated after the specified date and time. If absent defaults to include all products") @Valid @RequestParam(value = "updated-since", required = false) String updatedSince,@ApiParam(value = "Filter results based on a specific brand") @Valid @RequestParam(value = "brand", required = false) String brand,@ApiParam(value = "Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.", allowableValues = "TRANS_AND_SAVINGS_ACCOUNTS, TERM_DEPOSITS, TRAVEL_CARDS, REGULATED_TRUST_ACCOUNTS, RESIDENTIAL_MORTGAGES, CRED_AND_CHRG_CARDS, PERS_LOANS, MARGIN_LOANS, LEASES, TRADE_FINANCE, OVERDRAFTS, BUSINESS_LOANS") @Valid @RequestParam(value = "product-category", required = false) String productCategory,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV) {
        
        ListProductsResponseWrapper res  = listProductsI.execute(new ListProductsP(effective, updatedSince, brand, productCategory, page, pageSize, xV, xMinV));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingScheduledPaymentsList> listScheduledPayments(@ApiParam(value = "ID of the account to get scheduled payments for. Must have previously been returned by one of the account list end points. The account specified is the source account for the payment",required=true) @PathVariable("accountId") String accountId,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        String accept = request.getHeader("Accept");
        if (accept != null && accept.contains("application/json")) {
            try {
                return new ResponseEntity<ResponseBankingScheduledPaymentsList>(objectMapper.readValue("{  \"data\" : {    \"scheduledPayments\" : [ {      \"recurrence\" : {        \"nextPaymentDate\" : \"nextPaymentDate\",        \"eventBased\" : {          \"description\" : \"description\"        },        \"onceOff\" : {          \"paymentDate\" : \"paymentDate\"        },        \"recurrenceUType\" : \"onceOff\",        \"intervalSchedule\" : {          \"intervals\" : [ {            \"interval\" : \"interval\",            \"dayInInterval\" : \"dayInInterval\"          }, {            \"interval\" : \"interval\",            \"dayInInterval\" : \"dayInInterval\"          } ],          \"paymentsRemaining\" : 0,          \"finalPaymentDate\" : \"finalPaymentDate\",          \"nonBusinessDayTreatment\" : \"ON\"        },        \"lastWeekDay\" : {          \"paymentsRemaining\" : 6,          \"interval\" : \"interval\",          \"finalPaymentDate\" : \"finalPaymentDate\",          \"lastWeekDay\" : 1        }      },      \"scheduledPaymentId\" : \"scheduledPaymentId\",      \"payeeReference\" : \"payeeReference\",      \"payerReference\" : \"payerReference\",      \"nickname\" : \"nickname\",      \"from\" : {        \"accountId\" : \"accountId\"      },      \"paymentSet\" : [ {        \"isAmountCalculated\" : true,        \"amount\" : \"amount\",        \"currency\" : \"currency\",        \"to\" : {          \"domestic\" : {            \"payeeAccountUType\" : \"account\",            \"payId\" : {              \"identifier\" : \"identifier\",              \"name\" : \"name\",              \"type\" : \"EMAIL\"            },            \"account\" : {              \"bsb\" : \"bsb\",              \"accountName\" : \"accountName\",              \"accountNumber\" : \"accountNumber\"            },            \"card\" : {              \"cardNumber\" : \"cardNumber\"            }          },          \"accountId\" : \"accountId\",          \"biller\" : {            \"billerName\" : \"billerName\",            \"crn\" : \"crn\",            \"billerCode\" : \"billerCode\"          },          \"toUType\" : \"accountId\",          \"payeeId\" : \"payeeId\",          \"international\" : {            \"bankDetails\" : {              \"country\" : \"country\",              \"routingNumber\" : \"routingNumber\",              \"fedWireNumber\" : \"fedWireNumber\",              \"chipNumber\" : \"chipNumber\",              \"legalEntityIdentifier\" : \"legalEntityIdentifier\",              \"accountNumber\" : \"accountNumber\",              \"bankAddress\" : {                \"address\" : \"address\",                \"name\" : \"name\"              },              \"sortCode\" : \"sortCode\",              \"beneficiaryBankBIC\" : \"beneficiaryBankBIC\"            },            \"beneficiaryDetails\" : {              \"country\" : \"country\",              \"name\" : \"name\",              \"message\" : \"message\"            }          }        }      }, {        \"isAmountCalculated\" : true,        \"amount\" : \"amount\",        \"currency\" : \"currency\",        \"to\" : {          \"domestic\" : {            \"payeeAccountUType\" : \"account\",            \"payId\" : {              \"identifier\" : \"identifier\",              \"name\" : \"name\",              \"type\" : \"EMAIL\"            },            \"account\" : {              \"bsb\" : \"bsb\",              \"accountName\" : \"accountName\",              \"accountNumber\" : \"accountNumber\"            },            \"card\" : {              \"cardNumber\" : \"cardNumber\"            }          },          \"accountId\" : \"accountId\",          \"biller\" : {            \"billerName\" : \"billerName\",            \"crn\" : \"crn\",            \"billerCode\" : \"billerCode\"          },          \"toUType\" : \"accountId\",          \"payeeId\" : \"payeeId\",          \"international\" : {            \"bankDetails\" : {              \"country\" : \"country\",              \"routingNumber\" : \"routingNumber\",              \"fedWireNumber\" : \"fedWireNumber\",              \"chipNumber\" : \"chipNumber\",              \"legalEntityIdentifier\" : \"legalEntityIdentifier\",              \"accountNumber\" : \"accountNumber\",              \"bankAddress\" : {                \"address\" : \"address\",                \"name\" : \"name\"              },              \"sortCode\" : \"sortCode\",              \"beneficiaryBankBIC\" : \"beneficiaryBankBIC\"            },            \"beneficiaryDetails\" : {              \"country\" : \"country\",              \"name\" : \"name\",              \"message\" : \"message\"            }          }        }      } ],      \"status\" : \"ACTIVE\"    }, {      \"recurrence\" : {        \"nextPaymentDate\" : \"nextPaymentDate\",        \"eventBased\" : {          \"description\" : \"description\"        },        \"onceOff\" : {          \"paymentDate\" : \"paymentDate\"        },        \"recurrenceUType\" : \"onceOff\",        \"intervalSchedule\" : {          \"intervals\" : [ {            \"interval\" : \"interval\",            \"dayInInterval\" : \"dayInInterval\"          }, {            \"interval\" : \"interval\",            \"dayInInterval\" : \"dayInInterval\"          } ],          \"paymentsRemaining\" : 0,          \"finalPaymentDate\" : \"finalPaymentDate\",          \"nonBusinessDayTreatment\" : \"ON\"        },        \"lastWeekDay\" : {          \"paymentsRemaining\" : 6,          \"interval\" : \"interval\",          \"finalPaymentDate\" : \"finalPaymentDate\",          \"lastWeekDay\" : 1        }      },      \"scheduledPaymentId\" : \"scheduledPaymentId\",      \"payeeReference\" : \"payeeReference\",      \"payerReference\" : \"payerReference\",      \"nickname\" : \"nickname\",      \"from\" : {        \"accountId\" : \"accountId\"      },      \"paymentSet\" : [ {        \"isAmountCalculated\" : true,        \"amount\" : \"amount\",        \"currency\" : \"currency\",        \"to\" : {          \"domestic\" : {            \"payeeAccountUType\" : \"account\",            \"payId\" : {              \"identifier\" : \"identifier\",              \"name\" : \"name\",              \"type\" : \"EMAIL\"            },            \"account\" : {              \"bsb\" : \"bsb\",              \"accountName\" : \"accountName\",              \"accountNumber\" : \"accountNumber\"            },            \"card\" : {              \"cardNumber\" : \"cardNumber\"            }          },          \"accountId\" : \"accountId\",          \"biller\" : {            \"billerName\" : \"billerName\",            \"crn\" : \"crn\",            \"billerCode\" : \"billerCode\"          },          \"toUType\" : \"accountId\",          \"payeeId\" : \"payeeId\",          \"international\" : {            \"bankDetails\" : {              \"country\" : \"country\",              \"routingNumber\" : \"routingNumber\",              \"fedWireNumber\" : \"fedWireNumber\",              \"chipNumber\" : \"chipNumber\",              \"legalEntityIdentifier\" : \"legalEntityIdentifier\",              \"accountNumber\" : \"accountNumber\",              \"bankAddress\" : {                \"address\" : \"address\",                \"name\" : \"name\"              },              \"sortCode\" : \"sortCode\",              \"beneficiaryBankBIC\" : \"beneficiaryBankBIC\"            },            \"beneficiaryDetails\" : {              \"country\" : \"country\",              \"name\" : \"name\",              \"message\" : \"message\"            }          }        }      }, {        \"isAmountCalculated\" : true,        \"amount\" : \"amount\",        \"currency\" : \"currency\",        \"to\" : {          \"domestic\" : {            \"payeeAccountUType\" : \"account\",            \"payId\" : {              \"identifier\" : \"identifier\",              \"name\" : \"name\",              \"type\" : \"EMAIL\"            },            \"account\" : {              \"bsb\" : \"bsb\",              \"accountName\" : \"accountName\",              \"accountNumber\" : \"accountNumber\"            },            \"card\" : {              \"cardNumber\" : \"cardNumber\"            }          },          \"accountId\" : \"accountId\",          \"biller\" : {            \"billerName\" : \"billerName\",            \"crn\" : \"crn\",            \"billerCode\" : \"billerCode\"          },          \"toUType\" : \"accountId\",          \"payeeId\" : \"payeeId\",          \"international\" : {            \"bankDetails\" : {              \"country\" : \"country\",              \"routingNumber\" : \"routingNumber\",              \"fedWireNumber\" : \"fedWireNumber\",              \"chipNumber\" : \"chipNumber\",              \"legalEntityIdentifier\" : \"legalEntityIdentifier\",              \"accountNumber\" : \"accountNumber\",              \"bankAddress\" : {                \"address\" : \"address\",                \"name\" : \"name\"              },              \"sortCode\" : \"sortCode\",              \"beneficiaryBankBIC\" : \"beneficiaryBankBIC\"            },            \"beneficiaryDetails\" : {              \"country\" : \"country\",              \"name\" : \"name\",              \"message\" : \"message\"            }          }        }      } ],      \"status\" : \"ACTIVE\"    } ]  },  \"meta\" : {    \"totalRecords\" : 0,    \"totalPages\" : 6  },  \"links\" : {    \"next\" : \"next\",    \"last\" : \"last\",    \"prev\" : \"prev\",    \"self\" : \"self\",    \"first\" : \"first\"  }}", ResponseBankingScheduledPaymentsList.class), HttpStatus.NOT_IMPLEMENTED);
            } catch (IOException e) {
                log.error("Couldn't serialize response for content type application/json", e);
                return new ResponseEntity<ResponseBankingScheduledPaymentsList>(HttpStatus.INTERNAL_SERVER_ERROR);
            }
        }

        return new ResponseEntity<ResponseBankingScheduledPaymentsList>(HttpStatus.NOT_IMPLEMENTED);
    }

    public ResponseEntity<ResponseBankingScheduledPaymentsList> listScheduledPaymentsBulk(@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.", allowableValues = "TRANS_AND_SAVINGS_ACCOUNTS, TERM_DEPOSITS, TRAVEL_CARDS, REGULATED_TRUST_ACCOUNTS, RESIDENTIAL_MORTGAGES, CRED_AND_CHRG_CARDS, PERS_LOANS, MARGIN_LOANS, LEASES, TRADE_FINANCE, OVERDRAFTS, BUSINESS_LOANS") @Valid @RequestParam(value = "product-category", required = false) String productCategory,@ApiParam(value = "Used to filter results according to open/closed status. Values can be OPEN, CLOSED or ALL. If absent then ALL is assumed", allowableValues = "OPEN, CLOSED, ALL", defaultValue = "ALL") @Valid @RequestParam(value = "open-status", required = false, defaultValue="ALL") String openStatus,@ApiParam(value = "Filters accounts based on whether they are owned by the authorised customer.  True for owned accounts, false for unowned accounts and absent for all accounts") @Valid @RequestParam(value = "is-owned", required = false) Boolean isOwned,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        ListScheduledPaymentsBulkResponseWrapper res  = listScheduledPaymentsBulkI.execute(new ListScheduledPaymentsBulkP(productCategory, openStatus, isOwned, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
}

    public ResponseEntity<ResponseBankingScheduledPaymentsList> listScheduledPaymentsSpecificAccounts(@ApiParam(value = "Array of specific accountIds to obtain scheduled payments for.  The accounts specified are the source of funds for the payments returned" ,required=true )  @Valid @RequestBody RequestAccountIds accountIds,@ApiParam(value = "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)" ,required=true) @RequestHeader(value="x-v", required=true) String xV,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize,@ApiParam(value = "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder should respond with a 406 Not Acceptable." ) @RequestHeader(value="x-min-v", required=false) String xMinV,@ApiParam(value = "An [RFC4122](https://tools.ietf.org/html/rfc4122) UID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction." ) @RequestHeader(value="x-fapi-interaction-id", required=false) String xFapiInteractionId,@ApiParam(value = "The time when the customer last logged in to the data recipient. Required for all resource calls (customer present and unattended). Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-auth-date", required=false) String xFapiAuthDate,@ApiParam(value = "The customer's original IP address if the customer is currently logged in to the data recipient. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls." ) @RequestHeader(value="x-fapi-customer-ip-address", required=false) String xFapiCustomerIpAddress,@ApiParam(value = "The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the data recipient. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-User-Agent", required=false) String xCdsUserAgent,@ApiParam(value = "Subject identifier. Locally unique and never reassigned identifier within the Holder for the End-User. Mandatory for authenticated calls. Not required for unattended or unauthenticated calls." ) @RequestHeader(value="x-cds-subject", required=false) String xCdsSubject) {
        
        ListScheduledPaymentsSpecificAccountsResponseWrapper res  = listScheduledPaymentsSpecificAccountsI.execute(new ListScheduledPaymentsSpecificAccountsP(accountIds, page, pageSize, xV, xMinV, xFapiInteractionId, xFapiAuthDate, xFapiCustomerIpAddress, xCdsUserAgent, xCdsSubject));

        return new ResponseEntity<>(res.getResponse(),res.getHeaders(), HttpStatus.OK);
	} 
}
